@model ScholarshipWebApplication.Models.Database.SocialScholarshipProps
@using ScholarshipWebApplication.Models.Database
@{
    ViewBag.Title = "Stypendium socjalne";
}

<h2>Stypendium socjalne</h2>

@using (Html.BeginForm())
{
    if (ViewBag.isSended == true)
    {
        <label class="control-label">Dokument został już przesłany!</label>
    }
    else
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.kind, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.kind, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.incomeYear, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.incomeYear, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.netIncome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.netIncome, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.lostIncome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.lostIncome, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.gainedIncome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.gainedIncome, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.incomePerPersonPerMonth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.incomePerPersonPerMonth, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.alimonyCuts, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.alimonyCuts, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <table class="table table-hover">
                <thead>
                    <tr>
                        <th><label>Akcja</label></th>
                        <th>@Html.LabelFor(model => model.familyMembersIncome.FirstOrDefault().firstName)</th>
                        <th>@Html.LabelFor(model => model.familyMembersIncome.FirstOrDefault().lastName)</th>
                        <th>@Html.LabelFor(model => model.familyMembersIncome.FirstOrDefault().birthdayYear)</th>
                        <th>@Html.LabelFor(model => model.familyMembersIncome.FirstOrDefault().relationship)</th>
                        <th>@Html.LabelFor(model => model.familyMembersIncome.FirstOrDefault().taxedIncome)</th>
                        <th>@Html.LabelFor(model => model.familyMembersIncome.FirstOrDefault().untaxedIncome)</th>
                        <th>@Html.LabelFor(model => model.familyMembersIncome.FirstOrDefault().total)</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><button class="btn btn-default">Dodaj</button></td>
                        <td>@Html.EditorFor(model => model.familyMembersIncome.FirstOrDefault().firstName, new { htmlAttributes = new { @class = "col-md-10 form-control" } })</td>
                        <th>@Html.EditorFor(model => model.familyMembersIncome.FirstOrDefault().lastName, new { htmlAttributes = new { @class = "col-md-10 form-control" } })</th>
                        <td>@Html.EditorFor(model => model.familyMembersIncome.FirstOrDefault().birthdayYear, new { htmlAttributes = new { @class = "col-md-10" } })</td>
                        <td>@Html.EditorFor(model => model.familyMembersIncome.FirstOrDefault().relationship, new { htmlAttributes = new { @class = "col-md-10" } })</td>
                        <td>@Html.EditorFor(model => model.familyMembersIncome.FirstOrDefault().taxedIncome, new { htmlAttributes = new { @class = "col-md-10" } })</td>
                        <td>@Html.EditorFor(model => model.familyMembersIncome.FirstOrDefault().untaxedIncome, new { htmlAttributes = new { @class = "col-md-10" } })</td>
                        <td>@Html.EditorFor(model => model.familyMembersIncome.FirstOrDefault().total, new { htmlAttributes = new { @class = "col-md-10" } })</td>
                    </tr>
                </tbody>
            </table>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Zatwierdź" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
}

<div>
    @Html.ActionLink("Powrót", "Index", "Scholarship")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
