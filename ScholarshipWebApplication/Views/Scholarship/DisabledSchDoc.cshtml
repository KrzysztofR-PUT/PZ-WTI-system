@model ScholarshipWebApplication.Models.Database.ForDisabledScholarshipProps
@using ScholarshipWebApplication.Models.Helpers

@{
    ViewBag.Title = "Wniosek o przyznanie stypednium specjalnego dla osób niepełnosprawnych";
}

@using (Html.BeginForm())
{


    if (ViewBag.dateCheck == true)
    {
        @Html.Label("Minął termin przesłania dokumentu lub nie rozpoczęto jeszcze odbierania dokumentów dla stypendium dla osób niepełnosprawnych", new { htmlAttributes = new { @class = "control -label" } })

    }
    else
    {
        if (ViewBag.isSended == true)
        {<h2>Stypendium dla osób niepełnosprawnych</h2>
        @Html.Label("Dokument został już przesłany!", new { htmlAttributes = new { @class = "control -label" } })
        <br />
        <p>
            @Html.LabelFor(model => model.docState, new { htmlAttributes = new { @class = "control-label" } })
            @Html.Label(": " + Enumeration.getDescription(Model.docState), new { htmlAttributes = new { @class = "control-label" } })
        </p>
        }
        else
        {
        @Html.AntiForgeryToken()

        <div class="col-md-offset-2 col-md-10">
            <br />
            <br />
            <h2 align="center"> Wniosek o przyznanie stypednium specjalnego dla osób niepełnosprawnych</h2>
            <br />
            <br />

            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <th scope="row">Proszę o przyznanie stypednium specjalnego dla osób niepełnosprawnych. Mam orzeczony stopień niepełnosprawności</th>
                    </tr>
                    <tr>
                        <td>
                            @Html.RadioButtonFor(model => model.disabilityLevel, ScholarshipWebApplication.Models.Database.DisabilityLevel.lekki, new { id = ScholarshipWebApplication.Models.Database.DisabilityLevel.lekki }) lekki <br />
                            @Html.RadioButtonFor(model => model.disabilityLevel, ScholarshipWebApplication.Models.Database.DisabilityLevel.umiarkowany, new { id = ScholarshipWebApplication.Models.Database.DisabilityLevel.umiarkowany }) umiarkowany <br />
                            @Html.RadioButtonFor(model => model.disabilityLevel, ScholarshipWebApplication.Models.Database.DisabilityLevel.znaczny, new { id = ScholarshipWebApplication.Models.Database.DisabilityLevel.znaczny }) znaczny <br />
                        </td>
                    </tr>
                </tbody>
            </table>

            <br />

            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <th scope="row">Orzeczenie jest ważne</th>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.decisionStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.decisionStartDate, new { htmlAttributes = new { @class = "datepicker", @type = "date" } })
                                    @Html.ValidationMessageFor(model => model.decisionStartDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.decisionEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.decisionEndDate, new { htmlAttributes = new { @class = "datepicker", @type = "date" } })
                                    @Html.ValidationMessageFor(model => model.decisionEndDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.CheckBoxFor(model => model.isDecisionPermanent) na stałe
                        </td>
                    </tr>

                    
                </tbody>
            </table>

            <br />

            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.bankAccountNmb, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="form-inline col-md-10">
                                    <input style="width:45px" type="text" name="part1" class="form-control" maxlength="2">
                                    <span> - </span>
                                    <input style="width:90px" type="text" name="part2" class="form-control" maxlength="8">
                                    <span> - </span>
                                    <input style="width:90px" type="text" name="part3" class="form-control" maxlength="8">
                                    <span> - </span>
                                    <input style="width:90px" type="text" name="part4" class="form-control" maxlength="8">
                                </div>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>




                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Wyślij wniosek" class="btn btn-default" align="center" />
                        </div>
                    </div>
                </div>

        }
    }
}

                <br />

                <div>
                    @Html.ActionLink("Powrót", "Index", "Scholarship")
                </div>

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }

