@model ScholarshipWebApplication.Models.ViewModeltoBasicDoc


@{
    ViewBag.Title = "Formularz podstawowy";
}

<h2>Przed wypełnianiem dokumentów, należy podać podstawowe dane osobowe.</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h3>Informacje o studiowanych kierunkach</h3>
    <br/>
    <div class="form-horizontal">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>@Html.LabelFor(model => model.Course.Level)</th>
                    <th>@Html.LabelFor(model => model.Course.Form)</th>
                    <th>@Html.LabelFor(model => model.Course.Year)</th>
                    <th>@Html.LabelFor(model => model.Course.course.CourseName)</th>
                    <th>@Html.LabelFor(model => model.Course.course.Section)</th>
                    <th>Akcja</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Html.EditorFor(model => model.Course.Level, new { htmlAttributes = new { @class= "col-md-4 form-control" } })</td>
                    <td>@Html.EditorFor(model => model.Course.Form, new { htmlAttributes = new { @class = "col-md-4 form-control" } })</td>
                    <td>@Html.EditorFor(model => model.Course.Year, new { htmlAttributes = new { @class = "col-md-4 form-control" } })</td>
                    <td>@Html.EditorFor(model => model.Course.course.CourseName, new { htmlAttributes = new { @class = "col-md-4 form-control"} })</td>
                    <td>@Html.EditorFor(model => model.Course.course.Section, new { htmlAttributes = new { @class = "col-md-4 form-control" } })</td>
                    <td><input class="btn btn-default" type="submit" value="Dodaj"/></td>
                </tr>
                @if (Model != null && Model.Studies != null)
                {
                    for (int i = 0; i < Model.Studies.Count; i++)
                    {
                        @Html.HiddenFor(model => Model.Studies[i].StudiesID)
                        @Html.HiddenFor(model => Model.Studies[i].Level)
                        @Html.HiddenFor(model => Model.Studies[i].Form)
                        @Html.HiddenFor(model => Model.Studies[i].Year)
                        @Html.HiddenFor(model => Model.Studies[i].course.CourseName)
                        @Html.HiddenFor(model => Model.Studies[i].course.Section)
                    }
                }
            </tbody>
        </table>
    </div>
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <table class="table table-hover">
            <tbody>
                @if (Model != null && Model.Studies != null)
                {
                    for (int i = 0; i < Model.Studies.Count; i++)
                    {
                        <tr>
                            <td>@Html.DisplayFor(model => Model.Studies[i].Level)</td>
                            <td>@Html.DisplayFor(model => Model.Studies[i].Form)</td>
                            <td>@Html.DisplayFor(model => Model.Studies[i].Year)</td>
                            <td>@Html.DisplayFor(model => model.Studies[i].course.CourseName, new { htmlAttributes = new { @class = "col-md-4 form-control" } })</td>
                            <td>@Html.DisplayFor(model => model.Studies[i].course.Section, new { htmlAttributes = new { @class = "col-md-4 form-control" } })</td>
                        </tr>
                        @Html.HiddenFor(model => Model.Studies[i].StudiesID)
                        @Html.HiddenFor(model => Model.Studies[i].Level)
                        @Html.HiddenFor(model => Model.Studies[i].Form)
                        @Html.HiddenFor(model => Model.Studies[i].Year)
                        @Html.HiddenFor(model => Model.Studies[i].course.CourseName)
                        @Html.HiddenFor(model => Model.Studies[i].course.Section)
                    }
                }
            </tbody>
        </table>
    </div>
    <h3>Informacje o tobie</h3>
    <br />
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Student.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.RegistryNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.RegistryNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.RegistryNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <br /><h3>Adres</h3>
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.Adres.Street, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adres.Street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adres.Street, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Adres.FlatNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adres.FlatNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adres.FlatNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Adres.PostCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adres.PostCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adres.PostCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Adres.Place, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adres.Place, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adres.Place, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Adres.Voivodeship, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adres.Voivodeship, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adres.Voivodeship, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zatwierdź" class="btn btn-default" />
            </div>
            <div>
                @Html.ActionLink("Back", "Index", "Home")
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
